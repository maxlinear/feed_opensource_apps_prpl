diff --git a/udpst.c b/udpst.c
index 8e84336..5449164 100644
--- a/udpst.c
+++ b/udpst.c
@@ -960,6 +960,9 @@ int proc_parameters(int argc, char **argv, int fd) {
                 case '6':
                         conf.addrFamily = AF_INET6;
                         conf.ipv6Only   = TRUE;
+#if defined(MXL_OPT)
+                        conf.mtuSize = (ETH_DATA_LEN - (sizeof(struct ip6_hdr) + sizeof(struct udphdr)));
+#endif
                         break;
 #if defined(MXL_OPT)
                 case 'z':
diff --git a/udpst_control.c b/udpst_control.c
index 5cb3be5..c996fe5 100644
--- a/udpst_control.c
+++ b/udpst_control.c
@@ -134,6 +134,12 @@ extern cJSON *json_top, *json_output;
 #ifndef UDP_GRO
 #define UDP_GRO 104
 #endif
+#ifndef OB_UDPST
+#define OB_UDPST 105
+#endif
+#ifndef OB_UDPST6
+#define OB_UDPST6 106
+#endif
 #endif
 //----------------------------------------------------------------------------
 //
@@ -1015,7 +1021,20 @@ int service_actreq(int connindex) {
         tspecvar.tv_nsec = NSECINSEC / 2;
         tspecplus(&repo.systemClock, &tspecvar, &c->timer3Thresh);
         c->timer3Action = &stop_test;
+#if defined(MXL_OPT)
+        if (conf.groStatus) {
+                int val2 = 1;
+                int opt_name = OB_UDPST;
+                if (c->ipProtocol == IPPROTO_IPV6)
+                        opt_name = OB_UDPST6;
 
+                if(setsockopt(c->fd, IPPROTO_UDP, opt_name, &val2, sizeof(val2)) < 0) {
+						var = sprintf(scratch, "SET OB_UDPST ERROR: %s\n", strerror(errno));
+                        send_proc(errConn, scratch, var);
+                        return -1;
+                }
+        }
+#endif
         return 0;
 }
 //----------------------------------------------------------------------------
@@ -1591,13 +1610,23 @@ int new_conn(int activefd, char *host, int port, int type, int (*priaction)(int)
                         }
 #if defined(MXL_OPT)
                         if (conf.gsoStatus) {
-                                int val1 = IP_PMTUDISC_DO;
-                                if(setsockopt(fd, SOL_IP, IP_MTU_DISCOVER, &val1, sizeof(val1)) < 0) {
+                                    int level, dtype, val;
+
+                            if (conf.addrFamily == AF_INET) {
+                                    level = SOL_IP;
+                                    dtype = IP_MTU_DISCOVER;
+                                    val = IP_PMTUDISC_DO;
+                            } else {
+                                    level = SOL_IPV6;
+                                    dtype = IPV6_MTU_DISCOVER;
+                                    val = IPV6_PMTUDISC_DO;
+                            }
+                            if(setsockopt(fd, level, dtype, &val, sizeof(val)) < 0) {
                                     var = sprintf(scratch, "[%d]SET IP_MTU_DISCOVER ERROR: %s\n", i, strerror(errno));
                                     send_proc(errConn, scratch, var);
                                     init_conn(i, TRUE);
                                     return -1;
-                                }
+                            }
                         }
 #endif
                 }
@@ -1775,7 +1804,15 @@ int connected(int connindex) {
         }
         if (var != 3) {
                 c->ipProtocol = IPPROTO_IPV6;
+#if defined(MXL_OPT)
+                conf.addrFamily = AF_INET6;
+                conf.mtuSize = (conf.mtuSize - sizeof(struct ip6_hdr));
+#endif
         } else {
+#if defined(MXL_OPT)
+                conf.addrFamily = AF_INET;
+                conf.mtuSize = (conf.mtuSize - sizeof(struct iphdr));
+#endif
                 c->ipProtocol = IPPROTO_IP;
         }
 #if defined(MXL_OPT)
diff --git a/udpst_data.c b/udpst_data.c
index 53af8e7..b73281b 100644
--- a/udpst_data.c
+++ b/udpst_data.c
@@ -441,12 +441,16 @@ static void _sendmmsg_burst(int connindex, int totalburst, int burstsize, unsign
                 mmsg[i].msg_hdr.msg_iovlen = 1;
 #if defined(MXL_OPT)
                 if (conf.gsoStatus) {
-                    mmsg[i].msg_hdr.msg_name   = (void *)&(repo.remSas);
-                    mmsg[i].msg_hdr.msg_namelen = sizeof(struct sockaddr_in);
-                    if (cctl.msg_controllen) {
-                        mmsg[i].msg_hdr.msg_control = cctl.control;
-                        mmsg[i].msg_hdr.msg_controllen = cctl.msg_controllen;
-                    }
+                        mmsg[i].msg_hdr.msg_name   = (void *)&(repo.remSas);
+                        if (conf.addrFamily == AF_INET6)
+                                mmsg[i].msg_hdr.msg_namelen = sizeof(struct sockaddr_in6);
+                        else
+                                mmsg[i].msg_hdr.msg_namelen = sizeof(struct sockaddr_in);
+
+                        if (cctl.msg_controllen) {
+                                mmsg[i].msg_hdr.msg_control = cctl.control;
+                                mmsg[i].msg_hdr.msg_controllen = cctl.msg_controllen;
+                        }
                 }
 #endif
                 nextsndbuf += payload;
